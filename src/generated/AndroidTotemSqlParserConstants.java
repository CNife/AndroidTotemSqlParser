/* Generated By:JavaCC: Do not edit this line. AndroidTotemSqlParserConstants.java */
package generated;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface AndroidTotemSqlParserConstants {

  /**
   * End of File.
   */
  int EOF = 0;
  /** RegularExpression Id. */
  int AS = 5;
  /** RegularExpression Id. */
  int CLASS = 6;
  /** RegularExpression Id. */
  int CREATE = 7;
  /** RegularExpression Id. */
  int DELETE = 8;
  /** RegularExpression Id. */
  int DROP = 9;
  /** RegularExpression Id. */
  int FROM = 10;
  /** RegularExpression Id. */
  int INSERT = 11;
  /** RegularExpression Id. */
  int INTO = 12;
    /** RegularExpression Id. */
  int SELECT = 13;
    /** RegularExpression Id. */
  int SELECTDEPUTY = 14;
    /** RegularExpression Id. */
  int SET = 15;
    /** RegularExpression Id. */
  int UPDATE = 16;
    /** RegularExpression Id. */
  int VALUES = 17;
    /** RegularExpression Id. */
  int WHERE = 18;
    /** RegularExpression Id. */
  int TYPE = 19;
    /** RegularExpression Id. */
  int INT = 20;
    /** RegularExpression Id. */
  int CHAR = 21;
    /** RegularExpression Id. */
  int ARROW = 22;
    /** RegularExpression Id. */
  int COMMA = 23;
    /** RegularExpression Id. */
  int DOT = 24;
    /** RegularExpression Id. */
  int EQUALS = 25;
    /** RegularExpression Id. */
  int SEMICOLON = 26;
    /** RegularExpression Id. */
  int LEFT_BRACKET = 27;
    /** RegularExpression Id. */
  int RIGHT_BRACKET = 28;
    /** RegularExpression Id. */
  int LESS_THAN = 29;
    /** RegularExpression Id. */
  int GREATER_THAN = 30;
    /** RegularExpression Id. */
  int LESS_THAN_OR_EQUALS = 31;
    /** RegularExpression Id. */
  int GREATER_THAN_OR_EQUALS = 32;
    /** RegularExpression Id. */
  int ADD = 33;
    /** RegularExpression Id. */
  int MINUS = 34;
    /** RegularExpression Id. */
  int MULTIPLY = 35;
    /** RegularExpression Id. */
  int DIVIDE = 36;
    /** RegularExpression Id. */
  int IDENTIFIER = 37;
    /** RegularExpression Id. */
  int INTEGER_LITERAL = 38;
    /** RegularExpression Id. */
  int LETTER = 39;
    /** RegularExpression Id. */
  int DIGIT = 40;
    /** RegularExpression Id. */
  int LEADING_DIGIT = 41;

    /** Lexical state. */
  int DEFAULT = 0;

    /** Literal token values. */
  String[] tokenImage = {
            "<EOF>",
            "\" \"",
            "\"\\t\"",
            "\"\\r\"",
            "\"\\n\"",
            "\"AS\"",
            "\"CLASS\"",
            "\"CREATE\"",
            "\"DELETE\"",
            "\"DROP\"",
            "\"FROM\"",
            "\"INSERT\"",
            "\"INTO\"",
            "\"SELECT\"",
            "\"SELECTDEPUTY\"",
            "\"SET\"",
            "\"UPDATE\"",
            "\"VALUES\"",
            "\"WHERE\"",
            "<TYPE>",
            "\"INT\"",
            "\"CHAR\"",
            "\"->\"",
            "\",\"",
            "\".\"",
            "\"=\"",
            "\";\"",
            "\"(\"",
            "\")\"",
            "\"<\"",
            "\">\"",
            "\"<=\"",
            "\">=\"",
            "\"+\"",
            "\"-\"",
            "\"*\"",
            "\"/\"",
            "<IDENTIFIER>",
            "<INTEGER_LITERAL>",
            "<LETTER>",
            "<DIGIT>",
            "<LEADING_DIGIT>",
  };

}
